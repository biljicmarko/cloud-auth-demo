worker_processes 1;

events {}

http {
    lua_shared_dict discovery 1m;
    lua_shared_dict jwks 1m;
    lua_shared_dict sessions 10m;
    set_real_ip_from 0.0.0.0/0;
    real_ip_header X-Forwarded-For;

    resolver 127.0.0.11 ipv6=off;

    server {
        listen 80;

        location / {
            access_by_lua_block {
                local opts = {
                    redirect_uri_path = "/_callback",
                    discovery = "http://keycloak:8080/realms/z-task-realm/.well-known/openid-configuration",
                    client_id = "nginx-client",
                    client_secret = "mRy5EvCQfKUIfSJ8SlauxU96rAQ5yDsj",
                    scope = "openid",
                    ssl_verify = "no",
                    cookie_path = "/",
                    session_contents = { id_token=true, access_token=true, user=true }
                }

                local openidc = require("resty.openidc")
		local res, err = openidc.authenticate(opts)

		if err then
    		    ngx.log(ngx.ERR, "OIDC error: ", err)
    		    ngx.status = 500
    		    ngx.say("Authentication failed: ", err)
    		    ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)
		end

            }

            root /usr/local/openresty/nginx/html;
            index index.html;
        }
    }
}

